<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
	xmlns:tools="http://schemas.android.com/tools">


	<uses-permission android:name="android.permission.INTERNET" />
	<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
	<uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
	<uses-permission android:name="android.permission.USE_BIOMETRIC" />
	<uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
	<uses-permission android:name="android.permission.FOREGROUND_SERVICE_SPECIAL_USE" />
	<uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />

	<!-- Required for Auto photo upload, READ_EXTERNAL_STORAGE for legacy Android < 10 -->
	<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
	<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
	<uses-permission android:name="android.permission.MANAGE_EXTERNAL_STORAGE" />
	<uses-permission android:name="android.permission.READ_MEDIA_IMAGES" />
	<uses-permission android:name="android.permission.READ_MEDIA_VIDEO" />

	<uses-permission android:name="android.permission.POST_NOTIFICATIONS" />

	<uses-permission
		android:name="android.permission.GET_ACCOUNTS"
		tools:node="remove" />
	<uses-permission
		android:name="android.permission.USE_CREDENTIALS"
		tools:node="remove" />
	<uses-permission
		android:name="android.permission.MANAGE_ACCOUNTS"
		tools:node="remove" />

	<application
		android:name=".CryptomatorApp"
		android:allowBackup="false"
		android:icon="@mipmap/ic_launcher"
		android:label="@string/app_name"
		android:requestLegacyExternalStorage="true"
		android:supportsRtl="true"
		android:theme="@style/AppTheme"
		android:usesCleartextTraffic="true">
		<!-- Necessary for OneDrive https://stackoverflow.com/a/50779232/825532 -->
		<uses-library
			android:name="org.apache.http.legacy"
			android:required="false" />

		<activity
			android:name=".ui.activity.VaultListActivity"
			android:exported="true"
			android:theme="@style/AppTheme.Starting"
			android:windowSoftInputMode="adjustPan">
			<intent-filter>
				<action android:name="android.intent.action.MAIN" />

				<category android:name="android.intent.category.LAUNCHER" />
			</intent-filter>
		</activity>

		<activity android:name=".ui.activity.ChooseCloudServiceActivity" />
		<activity
			android:name=".ui.activity.CreateVaultActivity"
			android:exported="false"
			android:windowSoftInputMode="stateVisible" />
		<activity
			android:name=".ui.activity.BrowseFilesActivity"
			android:exported="false"
			android:windowSoftInputMode="adjustPan" />
		<activity
			android:name=".ui.activity.SetPasswordActivity"
			android:exported="false"
			android:windowSoftInputMode="stateVisible" />

		<activity
			android:name=".ui.activity.TextEditorActivity"
			android:exported="false"
			android:windowSoftInputMode="stateVisible" />

		<activity
			android:name=".ui.activity.SharedFilesActivity"
			android:excludeFromRecents="true"
			android:exported="true"
			android:taskAffinity=".share"
			android:windowSoftInputMode="stateHidden|adjustPan">
			<intent-filter android:label="@string/share_with_label">
				<action android:name="android.intent.action.SEND" />
				<action android:name="android.intent.action.SEND_MULTIPLE" />

				<category android:name="android.intent.category.DEFAULT" />

				<data android:mimeType="*/*" />
			</intent-filter>
		</activity>

		<activity
			android:name=".ui.activity.UnlockVaultActivity"
			android:exported="false"
			android:theme="@style/TransparentPopUp" />

		<activity
			android:name=".ui.activity.AutoUploadRefreshTokenActivity"
			android:exported="false" />
		<!-- Settings -->
		<activity
			android:name=".ui.activity.AutoUploadChooseVaultActivity"
			android:exported="false" />
		<activity
			android:name=".ui.activity.BiometricAuthSettingsActivity"
			android:exported="false" />
		<activity
			android:name=".ui.activity.CloudConnectionListActivity"
			android:exported="false" />
		<activity
			android:name=".ui.activity.CloudSettingsActivity"
			android:exported="false" />
		<activity
			android:name=".ui.activity.CryptomatorVariantsActivity"
			android:exported="false" />
		<activity
			android:name=".ui.activity.LicensesActivity"
			android:exported="true" />
		<activity
			android:name=".ui.activity.SettingsActivity"
			android:exported="false" />
		<activity
			android:name=".ui.activity.WebDavAddOrChangeActivity"
			android:exported="false" />
		<activity
			android:name=".ui.activity.S3AddOrChangeActivity"
			android:exported="false" />

		<activity
			android:name=".ui.activity.AuthenticateCloudActivity"
			android:exported="false"
			android:theme="@style/Theme.Transparent" />

		<activity
			android:name=".ui.activity.AuthenticatePCloudActivity"
			android:configChanges="orientation|keyboard"
			android:exported="true"
			android:launchMode="singleTask">

			<intent-filter>
				<data
					android:host="redirect"
					android:scheme="pcloudoauth" />

				<action android:name="android.intent.action.VIEW" />

				<category android:name="android.intent.category.BROWSABLE" />
				<category android:name="android.intent.category.DEFAULT" />
			</intent-filter>

		</activity>

		<activity
			android:name=".ui.activity.ImagePreviewActivity"
			android:exported="false"
			android:theme="@style/FullscreenTheme" />

		<activity
			android:name=".ui.activity.LicenseCheckActivity"
			android:exported="true"
			android:launchMode="singleTask">
			<intent-filter android:label="@string/dialog_enter_license_title">
				<action android:name="android.intent.action.VIEW" />

				<category android:name="android.intent.category.DEFAULT" />
				<category android:name="android.intent.category.BROWSABLE" />

				<data
					android:host="*"
					android:scheme="cryptomator" />
			</intent-filter>
			<intent-filter android:label="@string/dialog_enter_license_title">
				<action android:name="android.intent.action.VIEW" />

				<category android:name="android.intent.category.DEFAULT" />
				<category android:name="android.intent.category.BROWSABLE" />

				<data
					android:host="android.cryptomator.org"
					android:pathPrefix="/app/license"
					android:scheme="https" />
			</intent-filter>
		</activity>

		<provider
			android:name="androidx.core.content.FileProvider"
			android:authorities="${applicationId}.fileprovider"
			android:exported="false"
			android:grantUriPermissions="true">
			<meta-data
				android:name="android.support.FILE_PROVIDER_PATHS"
				android:resource="@xml/file_paths" />
		</provider>

		<meta-data
			android:name="android.max_aspect"
			android:value="2.1" />

		<service
			android:name=".service.CryptorsService"
			android:enabled="true"
			android:foregroundServiceType="specialUse">
			<property
				android:name="android.app.PROPERTY_SPECIAL_USE_FGS_SUBTYPE"
				android:value="This app uses client-side encryption, so the users need to unlock vaults before accessing their data.
				During this access, we need to store the vault keys in memory so that the user does not need to enter their unlock password
				each time the vault is accessed. The vault is unlocked until a user-defined inactivity timeout is reached or, if not disabled,
				the screen is locked. All of this requires this permission." />
		</service>

		<service
			android:name=".service.AutoUploadService"
			android:enabled="true" />

		<service
			android:name=".service.PhotoContentJob"
			android:exported="true"
			android:permission="android.permission.BIND_JOB_SERVICE" />

		<receiver
			android:name=".AutoPhotoUploadReceiver"
			android:exported="true"
			android:label="AutoPhotoUploadReceiver">
			<intent-filter>
				<action android:name="android.hardware.action.NEW_PICTURE" />
				<action android:name="com.android.camera.NEW_PICTURE" />

				<data android:mimeType="image/*" />
			</intent-filter>
		</receiver>

		<receiver
			android:name=".BootAwareReceiver"
			android:exported="true">
			<intent-filter>
				<action android:name="android.intent.action.BOOT_COMPLETED" />
				<action android:name="android.intent.action.ACTION_SHUTDOWN" />
			</intent-filter>
		</receiver>

	</application>

</manifest>
